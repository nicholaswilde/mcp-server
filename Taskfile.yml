---
version: '3'

vars:
  VER: '2.5'
  SOURCE: 'source venv/bin/activate'
  
tasks:
  gflash:
    desc: Run Gemini with the gemini-2.5-flash model.
    cmds:
      - |
        gemini -m gemini-{{ .VER }}-flash
  glite:
    desc: Run Gemini with the gemini-2.5-flash-lite model.
    cmds:
      - |
        {{ .SOURCE }} && gemini -m gemini-{{ .VER }}-flash-lite

  gpro:
    desc: 'Run Gemini with the gemini-{{ .VER }}-pro model.'
    cmds:
      - |
        {{ .SOURCE }} && gemini -m gemini-{{ .VER }}-pro

  install:
    desc: "Install Python dependencies"
    cmds:
      - |
        source venv/bin/activate && pip install -r requirements.txt

  run:
    desc: "Run the FastAPI server"
    env:
      AGENTS_LIBRARY_PATH: "{{ .TASKFILE_DIR }}/agents-library"
    cmds:
      - |
        {{ .TASKFILE_DIR }}/venv/bin/python -m uvicorn app.server:app --host 0.0.0.0 --port 8080 --reload
    ignore_error: true
  lint:
    desc: "Run linting checks"
    cmds:
      - echo "No linting configured yet." # TODO: Add actual linting command (e.g., ruff, flake8)

  docker-build:
    desc: "Build the Docker image"
    cmds:
      - docker build -t nicholaswilde/mcp-server . --load

  docker-run:
    desc: "Run the Docker container"
    cmds:
      - docker run -p 8080:8080 -e AGENTS_LIBRARY_PATH=/app/agents-library nicholaswilde/mcp-server

  docker-build-and-load:
    desc: "Build and load the Docker image"
    cmds:
      - task: docker-build
      - task: docker-run

  test:
    desc: "Run Python unit tests"
    cmds:
      - |
        source venv/bin/activate && PYTHONPATH=. pytest tests/test_server.py
  default:
    cmds:
      - task -l
    silent: true
